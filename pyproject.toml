[tool.poetry]
name = "carina"
version = "0.0.0"
description = "BPL Rewards Management System"
authors = ["Bink <bink@bink.bink>"]
readme = "README.md"
repository = "https://github.com/binkhq/carina"

[[tool.poetry.source]]
name = "bink-pypi"
url = "https://pypi.tools.uksouth.bink.sh/simple"
default = false
secondary = false

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.85.0"
uvicorn = {extras = ["standard"], version = "^0.18.3"}
sqlalchemy = {extras = ["asyncio"], version = "^1.4.41"}
alembic = "^1.8.1"
pydantic = "^1.10.2"
asyncpg = "^0.26.0"
psycopg2-binary = "^2.9.3"
prettyprinter = "^0.18.0"
ujson = "^5.5.0"
sentry-sdk = "^1.17.0"
prometheus-client = "==0.12.0"  # make sure polaris.core.cli monkeypatch is still needed and functioning
blinker = "^1.5"
gunicorn = "^20.1.0"
requests = "^2.28.1"
rq = "^1.11.0"
redis = "^4.5.4"
hiredis = "^1.0.2"
tenacity = "^8.0.1"
azure-identity = "^1.10.0"
azure-keyvault = "^4.2.0"
azure-storage-blob = "==12.8.1"   # version 12.9.0 & 12.10.0 have bad type annotations
APScheduler = "^3.9.1"
PyYAML = "^6.0"
typer = "^0.6.1"
cryptography = "^39.0.1"
retry-tasks-lib = {version = "2.0.*", source = "bink-pypi"}
cosmos-message-lib = {version = "^1.2.0", source = "bink-pypi"}
fastapi-prometheus-metrics = {version = "^0.2.3", source = "bink-pypi"}
future = "^0.18.3"

[tool.poetry.group.dev.dependencies]
isort = "^5.10.1"
black = "^22.8.0"
mypy = "^0.971"
ipython = "^8.5.0"
pytest = "^7.1.3"
pytest-cov = "^3.0.0"
xenon = "^0.9.0"
httpretty = "^1.1.4"
pytest-asyncio = "^0.19.0"
SQLAlchemy-Utils = "^0.38.3"
pytest-mock = "^3.8.2"
types-redis = "^4.3.20"
types-requests = "^2.28.10"
types-PyYAML = "^6.0.11"
pylint = "^2.15.2"
pylint-pytest = "^1.1.2"
testfixtures = "^7.0.0"

[tool.poetry.scripts]
carina = 'carina.core.cli:cli'

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
lines_between_types = 1

[tool.mypy]
disallow_untyped_defs = true
show_error_codes = true
warn_unused_ignores = true
ignore_missing_imports = true
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin",
]

[tool.pylint.MASTER]
load-plugins=[
    "pylint_pytest",
    "pylint.extensions.mccabe"
]

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    "logging-fstring-interpolation",
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "too-few-public-methods",
    "consider-using-f-string",
    "duplicate-code", # pylint definition of "duplicate" is way too loose (ex: fastapi route definitions are flagged).
]
good-names=["k", "v", "i", "q", "fn", "ex", "dt", "tz"]
extension-pkg-whitelist=[
    "pydantic",
]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = '^((?P<epoch>\d+)!)?(?P<base>\d+(\.\d+)*)'

[tool.poetry-dynamic-versioning.substitution]
files = ['carina/version.py']

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
